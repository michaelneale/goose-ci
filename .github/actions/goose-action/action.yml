name: "Goose AI Action"
description: "Sets up Goose AI with pipx and optionally creates a PR"
inputs:
  task_request:
    description: 'Task request for Goose AI to complete'
    required: true
  validation:
    description: 'instructions for how to test to confirm changes are ok'
    required: true
  create_pr:
    description: 'Optionally create a Pull Request'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.6'

    - name: Install pipx
      run: python -m pip install --user pipx
      shell: bash

    - name: Ensure pipx path
      run: python -m pipx ensurepath
      shell: bash

    - name: Add pipx to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install Goose AI
      run: pipx install goose-ai
      shell: bash

    - name: Install additional tools
      run: sudo apt-get update && sudo apt-get install -y ripgrep curl git jq wget
      shell: bash

    - name: Copy plan file and entrypoint script
      run: |
        cp .github/actions/goose-action/plan.yaml plan.yaml
        cp .github/actions/goose-action/entrypoint.sh entrypoint.sh
        chmod +x entrypoint.sh
      shell: bash

    - name: Run goose
      run: ./entrypoint.sh
      shell: bash
      env:
        TASK_REQUEST: ${{ inputs.task_request }}
        VALIDATION: ${{ inputs.validation }}

    - name: commit changes and open PR
      if: ${{ inputs.create_pr == 'true' }}
      run: |
        git config --global user.email "goose@block.xyz"
        git config --global user.name "goose-ai"
        if [ -n "$(git status --porcelain)" ]; then
          sanitized_branch_name=$(echo "${{ inputs.task_request }}" | tr -cd '[:alnum:]' | tr '[:upper:]' '[:lower:]' | cut -c 1-12)
          echo "BRANCH_NAME=$sanitized_branch_name" >> $GITHUB_ENV
          git checkout -B ${{ env.BRANCH_NAME }}
          git commit -am "Goose made changes"
          git push origin ${{ env.BRANCH_NAME }}          
        else
          echo "No changes detected"
        fi
      shell: bash


    - name: Create Pull Request
      if: ${{ env.BRANCH_NAME }}
      uses: peter-evans/create-pull-request@v5
      with:
        branch: ${{ env.BRANCH_NAME }}
        commit-message: "Goose Action made changes"
        title: "Goose Action PR: ${{ inputs.task_request }}"
        body: |
          This PR contains the changes made by the Goose Action.
          
          **Task Request:**
          ${{ inputs.task_request }}